from web3 import Web3
import json

"""
Private key     :  0x18fd06d0744a207fa9dac3399773ea9d7fba4819aabb8b7604c5ad9f712ca455
Address         :  0xed5b200c72866f24dc5A8962f3A179a4dDC7932c
Target contract :  0xb4A92Df5f7cF491bF8C02E5C5e8f49698f5e8D24
Setup contract  :  0xa723Abe6D9C48c81D4f4a215357B86324eD07f3A
"""
priv_key = '0x18fd06d0744a207fa9dac3399773ea9d7fba4819aabb8b7604c5ad9f712ca455'
self_addr = '0xed5b200c72866f24dc5A8962f3A179a4dDC7932c'
setup_contract_addr = '0xa723Abe6D9C48c81D4f4a215357B86324eD07f3A'
target_contract_addr = '0xb4A92Df5f7cF491bF8C02E5C5e8f49698f5e8D24'

rpc_url = 'http://209.97.132.38:31737'
w3 = Web3(Web3.HTTPProvider(rpc_url))
if not w3.is_connected():
  print("error to connect")
  exit(-1)
print('Connected')


with open('./setup_abi.json') as f:
  setup_abi = json.load(f)
with open('./unknown_abi.json') as f:
  unknown_abi = json.load(f)


target_contract = w3.eth.contract(target_contract_addr, abi=unknown_abi)
setup_contract = w3.eth.contract(setup_contract_addr, abi=setup_abi)

tx_hash = target_contract.functions.updateSensors(10).transact()
tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)
print("Updated to 10")
print(tx_receipt)

is_solved = target_contract.functions.updated().call()
print(is_solved)
